/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "zmk-helpers/helper.h"

// Source desired key-position labels

#include "zmk-helpers/key-labels/42.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 41 40 39>;
            hold-trigger-on-release;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <6 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 38 37 36>;
            hold-trigger-on-release;
        };
    };

    macros {
        new_macro: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(A) &kp N9 &kp N1 &kp N7 &kp N0 &kp N8 &kp N7 &kp P &kp N1 &kp N7 &kp N9 &kp N8 &kp N4 &kp N0 &kp N5 &kp N0>;
            label = "NEW_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp ESCAPE     &kp Q                &kp W            &kp E                &kp R      &kp T             &kp Y      &kp U  &kp I                 &kp O             &kp P                         &kp BSPC
&kp DELETE     &hml LEFT_CONTROL A  &hml LEFT_ALT S  &hml LEFT_COMMAND D  &kp F      &kp G             &kp H      &kp J  &hmr LEFT_COMMAND K   &hmr RIGHT_ALT L  &hmr RIGHT_CONTROL SEMICOLON  &kp SQT
&kp BACKSLASH  &kp Z                &kp X            &kp C                &kp V      &kp B             &kp N      &kp M  &kp COMMA             &kp DOT           &kp FSLH                      &kp ENTER
                                                     &hml PLUS EQUAL      &lt 1 TAB  &kp LEFT_SHIFT    &kp SPACE  &mo 2  &hmr LS(MINUS) MINUS
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&kp KP_MULTIPLY  &kp MINUS      &mt LS(N7) N7              &mt LS(N8) N8              &mt LS(N9) N9              &kp PLUS          &kp LS(LEFT_BRACKET)      &kp LS(RIGHT_BRACKET)  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&kp SLASH        &kp BACKSPACE  &mt LS(NUMBER_4) NUMBER_4  &mt LS(N5) N5              &mt LS(NUMBER_6) NUMBER_6  &kp RET           &kp LS(LC(LG(LEFT_ALT)))  &kp LEFT               &kp DOWN              &kp UP_ARROW           &kp RIGHT         &kp DOLLAR
&kp BACKSLASH    &kp N0         &mt LS(NUMBER_1) NUMBER_1  &mt LS(NUMBER_2) NUMBER_2  &mt LS(NUMBER_3) NUMBER_3  &kp PERIOD        &kp LA(LS(MINUS))         &kp LS(LC(TAB))        &kp PAGE_DOWN         &kp PAGE_UP            &kp LC(TAB)       &kp TILDE
                                                           &kp TILDE                  &kp SPACE                  &kp LEFT_SHIFT    &kp SPACE                 &kp LG(LS(LEFT))       &kp LS(LG(RIGHT))
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&kp ESC  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &kp F6            &kp F7          &kp F8             &kp F9           &kp F10       &kp F11
&trans   &trans  &trans  &trans  &trans  &trans    &trans            &kp C_PREVIOUS  &kp K_VOLUME_DOWN  &kp K_VOLUME_UP  &kp C_NEXT    &kp GRAVE
&trans   &trans  &trans  &trans  &trans  &trans    &bt BT_SEL 0      &bt BT_SEL 1    &bt BT_SEL 2       &bt BT_SEL 3     &bt BT_SEL 4  &kp TILDE
                         &trans  &trans  &trans    &kp C_PLAY_PAUSE  &trans          &kp C_MUTE
            >;
        };

        layer_3 {
            bindings = <
&kp ESCAPE  &kp F1        &kp F2        &kp F3        &kp F4        &kp F5          &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &none
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none   &none   &none   &none   &none    &trans
&none       &none         &none         &none         &none         &none           &none   &none   &none   &none   &none    &new_macro
                                        &none         &none         &none           &none   &none   &none
            >;
        };

        layer_4 {
            bindings = <
&trans  &kp N7        &kp N8        &kp N9        &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                    &kp N0        &trans  &trans    &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Layer3 {
            if-layers = <1 2>;
            then-layer = <3>;
        };

        Numpad {
            if-layers = <0>;
            then-layer = <3>;
        };
    };
};
